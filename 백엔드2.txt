

웹클라이언트 

웹클라이언트                          웹서버 (웹클라이언트의 요청으로  정적인웹페이를 찾아서 보내주는 역할)
                                     아파치(이미 만들어진 내용-html, css, javascript)
웹클라이언트                                특정폴더에 파일을 올려놓고 그 폴더에 있는 파일들만 클라언트로 전송
                                     WAS(Web Application Server)
웹클라이언트                       


WAS(Web Application Server) - 자바, jsp를 서블릿으로 변환시키셔 새로운 html문서를 만들어서 클라이언트로 보낸다 
                              Weblogic  - 대부분의 기업체 
                              jeus - 관공서 대학, tmax라는 회사가 만들었음 
                              resine - 비교적 저렴
                              tomcat - 무료 10버전까지 나와 있다 

tomcat was 의 기본 구조 
      bin      -- binary   여기에 톰캣 가동 프로그램  startup.bat(윈도우os), startup.sh(확장자가 sh인 파일은 리눅스용)   
                           시작 cmd  
                           cd 톰캣위치\bin 
                           startup      오류가 발생하면 서버가 작동이 안된다. (cmd창이 닫힌다)
                           catalina run   (cmd 창이 안닫히고 오류 메시지가 보인다 )  
      logs   -- log, 오류가 발생했던 사실들을 파일로 남겨놓는다 
      conf   -- 환경설정, 새로운 컨테이너 등록, 포트번호 수정등의 작업을 한다 server.xml 9000번으로 포트변경 
      lib    -- library, 자바로 톰캣의 핵심파일들 만들어서  jar형태로 존재함 
      temp   -- 임시의 
      webapps -- 특정폴더(컨텍스트-웹사이트) 올려놓는 공간 
                 webapps에 폴더 만들고 , 이 폴더하고  url연결시키는건   conf  폴더의  context.xml 파일에서 
      work -- jsp -> 서블릿으로 번역해서 놔두는 공간


컨텍스트를 만드는 방법 

프로젝트폴더  
    ㄴWEB-INF 
        ㄴclasses
            ~~.class 
        ㄴlib 
    css
    javascript 
    html 
    jsp 
 

http://127.0.0.1:9000/project03   ----------->   서버의 프로젝트폴더 (http://127.0.0.1:9000/project03)  
                                                            board 
                                                               boar_list.jsp 

http://127.0.0.1:9000/project03/board/board_list.jsp 폴더구조대로 따라가야 한다 

                                                            프로젝트폴더 
                                                               community 
                                                                    freeboard 
                                                                        list.jsp 
http://127.0.0.1:9000/project03/community/freeboard/list.jsp 


프로젝트폴더 
    WEB-INF 보안상 이 폴더는 url로 접근 불가 
        board 
           list.jsp 


http://127.0.0.1:9000/project03/WEB-INF/board/list.jsp    절대 불가능하다. 
WEB-INF 아래에는 html, css, javascript, jsp 등을 둘 수 없다. 

서블릿, 자바 파일들은 번역해서   WEB-INF/classes  라는 폴더로 들어간다 

서블릿은 url이 따로 없다. 그래서 서블릿 클래스와 url연결을 해야 한다 
web.xml 파일에 
<servlet>
  	<servlet-name>hello</servlet-name>
  	<servlet-class>com.woori.servlet.HelloServlet</servlet-class>  패키지를 포함한 클래스명
  </servlet>
  
  <servlet-mapping>
  	<servlet-name>hello</servlet-name>
  	<url-pattern>/hello</url-pattern>       url 
  </servlet-mapping> 


써주거나 (전통적인 방법)

tomcat 7.0부터 
@WebServlet 라는 어노테이션이 등장한다 

@WebServlet("url")


http://127.0.0.1:9000/project03/hello 를 치면  com.woori.servlet.HelloServlet 클래스가 동작한다 



project04  프로젝트를 만들고 
  webapps 폴더에 



1. jsp를 사용
http://127.0.0.1:9000/project04/myhome/home1.jsp 
첫번째과제입니다. 

2.서블릿을 사용한다 
http://127.0.0.1:9000/project04/myhome/home2.do 
두번째과제입니다.























